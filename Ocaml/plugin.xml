<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
	<extension point="org.eclipse.ui.preferencePages">
		<page name="OcaIDE" class="ocaml.preferences.RootPreferencePage"
			id="ocaml.preferences.RootPreferencePage">
		</page>
		<page category="ocaml.preferences.RootPreferencePage"
			class="ocaml.preferences.PathsPreferencePage"
			id="ocaml.preferences.PathsPreferencePage" name="Paths">
		</page>
		<page category="ocaml.preferences.RootPreferencePage"
			class="ocaml.preferences.SyntaxColoringPreferencePage"
			id="ocaml.preferences.SyntaxColoringPreferencePage"
			name="Syntax Coloring">
		</page>
		<page category="ocaml.preferences.RootPreferencePage"
			class="ocaml.preferences.EditorPreferencePage"
			id="ocaml.preferences.EditorPreferencePage"
			name="Editor">
		</page>
  <page
        category="ocaml.preferences.RootPreferencePage"
        class="ocaml.preferences.FormatterPreferencePage"
        id="ocaml.preferences.FormatterPreferencePage"
        name="Formatter">
  </page>
  <page
        category="ocaml.preferences.RootPreferencePage"
        class="ocaml.preferences.OutlinePreferencePage"
        id="ocaml.preferences.OutlinePreferencePage"
        name="Outline">
  </page>
  <page
        category="ocaml.preferences.OutlinePreferencePage"
        class="ocaml.preferences.OutlineFiltersPreferencePage"
        id="ocaml.preferences.OutlineFiltersPreferencePage"
        name="Filters">
  </page>
  <page
        category="ocaml.preferences.RootPreferencePage"
        class="ocaml.preferences.DebuggerPreferencePage"
        id="ocaml.preferences.DebuggerPreferencePage"
        name="Debugger">
  </page>
  <page
        category="ocaml.preferences.RootPreferencePage"
        class="ocaml.editor.templates.OcamlTemplatePreferencePage"
        id="ocaml.preferences.TemplatesPreferencePage"
        name="Templates">
  </page>
	</extension>
	
	<extension point="org.eclipse.core.runtime.preferences">
		<initializer class="ocaml.preferences.PreferenceInitializer">
		</initializer>
	</extension>
	
	<extension point="org.eclipse.ui.perspectives">
		<perspective name="OCaml" icon="icons/caml16x16.gif"
			class="ocaml.perspectives.OcamlPerspective"
			id="ocaml.perspectives.OcamlPerspective">
		</perspective>
		<perspective class="ocaml.perspectives.OcamlDebugPerspective"
			icon="icons/caml16x16.gif"
			id="ocaml.perspectives.OcamlDebugPerspective" name="Debug"/>
	</extension>
	
	<extension
       point="org.eclipse.ui.editors">
		<editor name="mlEditor" icon="icons/implFile.gif" extensions="ml"
			class="ocaml.editors.OcamlEditor"
			contributorClass="ocaml.editors.OcamlEditorActionContributor"
			id="ocaml.editors.mlEditor">
		</editor>
		
		<editor name="mliEditor" icon="icons/interfFile.gif" extensions="mli"
			class="ocaml.editors.OcamlEditor"
			contributorClass="ocaml.editors.OcamlEditorActionContributor"
			id="ocaml.editors.mliEditor">
		</editor>
		<editor name="mlpEditor" icon="icons/mlp.gif" extensions="mlp,ml4"
			class="ocaml.editors.OcamlEditor"
			contributorClass="ocaml.editors.OcamlEditorActionContributor"
			id="ocaml.editors.mlpEditor">
		</editor>
		
		<editor name="yaccEditor" icon="icons/yaccFile.gif" extensions="mly"
			class="ocaml.editors.yacc.OcamlyaccEditor"
			contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
			id="ocaml.editors.yaccEditor">
		</editor>
		
		<editor name="lexEditor" icon="icons/lexFile.gif" extensions="mll"
			class="ocaml.editors.lex.OcamllexEditor"
			contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
			id="ocaml.editors.lexEditor">
		</editor>
	</extension>
	
	<extension point="org.eclipse.ui.views">
		<category name="OCaml" id="ocaml.views.Category">
		</category>
		<category id="ocaml.views.DebugCategory" name="Ocaml Debugging"/>
		<view allowMultiple="false" category="ocaml.views.Category"
			class="ocaml.views.OcamlCompilerOutput" fastViewWidthRatio="90"
			icon="icons/caml16x16.gif" id="ocaml.ocamlCompilerOutput"
			name="OCaml Compiler Output">
		</view>
		<view allowMultiple="false" category="ocaml.views.Category"
			class="ocaml.views.OcamlBrowserView" fastViewWidthRatio="75"
			icon="icons/camlPurple16x16.gif" id="ocaml.ocamlBrowserView"
			name="OCaml Browser">
		</view>
		<view allowMultiple="true" category="ocaml.views.Category"
			class="ocaml.views.toplevel.OcamlToplevelView"
			fastViewWidthRatio="40" icon="icons/toplevelViewIcon.gif"
			id="Ocaml.ocamlToplevelView" name="OCaml Toplevel"/>
		<view allowMultiple="true" category="ocaml.views.Category"
			class="ocaml.views.toplevel.OcamlCustomToplevelView"
			fastViewWidthRatio="40" icon="icons/toplevelViewIcon.gif"
			id="Ocaml.ocamlCustomToplevelView" name="OCaml Custom Toplevel"/>
		<view allowMultiple="false" category="ocaml.views.DebugCategory"
			class="ocaml.debugging.views.OcamlCallStackView"
			icon="icons/stackframe.gif" id="Ocaml.CallStackView"
			name="Ocaml Call Stack"/>
		<view allowMultiple="false" category="ocaml.views.DebugCategory"
			class="ocaml.debugging.views.OcamlBreakpointsView"
			icon="icons/breakpoint_view.gif" id="Ocaml.BreakpointsView"
			name="Ocaml Breakpoints"/>
		<view allowMultiple="false" category="ocaml.views.DebugCategory"
			class="ocaml.debugging.views.OcamlWatchView"
			icon="icons/watchlist.gif" id="Ocaml.WatchView"
			name="Ocaml Variable Watch"/>
  <view
        allowMultiple="false"
        category="ocaml.views.Category"
        class="ocaml.views.ast.OcamlASTView"
        fastViewWidthRatio="40"
        icon="icons/astview.gif"
        id="Ocaml.ocamlASTView"
        name="AST"
        restorable="true">
  </view>
	</extension>
	
	<extension point="org.eclipse.ui.newWizards">
		<category name="OCaml" id="ocaml.wizards.Category">
		</category>
		
		<wizard name="Module" icon="icons/implFile.gif"
			category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewModuleWizard"
			id="ocaml.wizards.OcamlNewModuleWizard">
			<description> Create a ml file </description>
		</wizard>
		
		<wizard name="Interface" icon="icons/interfFile.gif"
			category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewInterfaceWizard"
			id="ocaml.wizards.OcamlNewInterfaceWizard">
			<description> Create a mli file </description>
		</wizard>
		
		<wizard name="Yacc" icon="icons/yaccFile.gif"
			category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewYaccWizard"
			id="ocaml.wizards.OcamlNewYaccWizard">
			<description> Create a Yacc file </description>
		</wizard>
		
		<wizard name="Lex" icon="icons/lexFile.gif"
			category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewLexWizard"
			id="ocaml.wizards.OcamlNewLexWizard">
			<description> Create a Lex file </description>
		</wizard>
		<wizard category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewMakeProjectWizard"
			finalPerspective="ocaml.perspectives.OcamlPerspective"
			icon="icons/caml16x16.gif"
			id="ocaml.wizards.OcamlNewMakefileProjectWizard"
			name="OCaml Makefile Project"
			preferredPerspectives="ocaml.perspectives.OcamlPerspective"
			project="true">
			<selection class="org.eclipse.core.resources.IResource"/>
			<description> Create an OCaml project with Makefile </description>
		</wizard>
		
		<wizard category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewEmptyMakeProjectWizard"
			finalPerspective="ocaml.perspectives.OcamlPerspective"
			icon="icons/caml16x16.gif"
			id="ocaml.wizards.OcamlNewEmptyMakefileProjectWizard"
			name="OCaml Empty Makefile Project"
			preferredPerspectives="ocaml.perspectives.OcamlPerspective"
			project="true">
			<selection class="org.eclipse.core.resources.IResource"/>
			<description> Create an empty OCaml Makefile project (useful for importing projects) </description>
		</wizard>

		<wizard category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewOMakeProjectWizard"
			finalPerspective="ocaml.perspectives.OcamlPerspective"
			icon="icons/caml16x16.gif"
			id="ocaml.wizards.OcamlNewOMakeProjectWizard"
			name="OCaml OMake Project"
			preferredPerspectives="ocaml.perspectives.OcamlPerspective"
			project="true">
			<selection class="org.eclipse.core.resources.IResource"/>
			<description> Create an OMake project with OMakefile and OMakeroot </description>
		</wizard>

		<wizard name="OCaml Managed Project" icon="icons/caml16x16.gif"
			category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewProjectWizard"
			preferredPerspectives="ocaml.perspectives.OcamlPerspective"
			finalPerspective="ocaml.perspectives.OcamlPerspective" project="true"
			id="ocaml.wizards.OcamlNewProjectWizard">
			<selection class="org.eclipse.core.resources.IResource">
			</selection>
			
			<description> Create an OCaml project </description>
		</wizard>

		<wizard name="OCaml Project (ocamlbuild)" 
			category="ocaml.wizards.Category"
			class="ocaml.wizards.OcamlNewOcamlbuildProjectWizard"
			icon="icons/caml16x16.gif"
			preferredPerspectives="ocaml.perspectives.OcamlPerspective"
			finalPerspective="ocaml.perspectives.OcamlPerspective" project="true"
			id="ocaml.wizards.OcamlNewOcamlbuildProjectWizard">
			<selection class="org.eclipse.core.resources.IResource">
			</selection>
			
			<description> Create an OCaml project (with Ocamlbuild) </description>
		</wizard>
		
	</extension>
	
	<extension point="org.eclipse.ui.ide.resourceFilters">
		<filter selected="true" pattern=".project"/>
		<filter selected="true" pattern=".DS_Store"/>		
		<filter selected="true" pattern="*.annot"/>		
		<filter selected="true" pattern="*.cmo"/>		
		<filter selected="true" pattern="*.cmi"/>		
		<filter selected="true" pattern="*.cmx"/>		
		<filter selected="true" pattern="*.cma"/>		
		<filter selected="true" pattern="*.cmxa"/>
		<filter pattern="*.o" selected="true"/>
		<filter pattern="*.obj" selected="true"/>
		<filter pattern=".settings" selected="true"/>
		<filter pattern=".paths" selected="true"/>
		<filter pattern="._d" selected="true"/>
		<filter pattern="._bcdi" selected="true"/>
		<filter pattern="._ncdi" selected="true"/>
  		<filter pattern="*._old" selected="true"/>
  		<filter pattern=".*" selected="false"/>
  		<filter pattern=".DebuggerSourceLookup" selected="true"/>
  		<filter pattern=".makefilepaths" selected="true"/>
  		<filter pattern=".HyperlinksLinkedFiles" selected="true"/>
  		<filter pattern="_build" selected="false"/>
        <filter pattern=".svn" selected="true"/>
        <filter pattern=".git" selected="true"/>
        <filter
              pattern=".projectSettings"
              selected="true">
        </filter>
	</extension>
	
   <extension point="org.eclipse.team.core.fileTypes">
      <fileTypes extension="ml" type="text"/>
      <fileTypes extension="mli" type="text"/>
      <fileTypes extension="mll" type="text"/>
      <fileTypes extension="mly" type="text"/>
      <fileTypes extension="cmo" type="binary"/>
      <fileTypes extension="cmi" type="binary"/>
      <fileTypes extension="cma" type="binary"/>
      <fileTypes extension="cmxo" type="binary"/>
      <fileTypes extension="cmxi" type="binary"/>
      <fileTypes extension="cmxa" type="binary"/>
      <fileTypes
            extension="mlp"
            type="text">
      </fileTypes>
      <fileTypes
            extension="ml4"
            type="text">
      </fileTypes>
   </extension>
	
	
	<extension point="org.eclipse.ui.propertyPages">
		<page 
			name="Ocaml Project" class="ocaml.properties.OcamlProjectProperties"
			id="ocaml.properties.OcamlProjectProperties">
			<enabledWhen>
				<instanceof value="org.eclipse.core.resources.IProject"/>
			</enabledWhen>
			<filter name="nature" value="ocaml.ocamlnature"/>
		</page>
		<page class="ocaml.properties.OcamlFileProperties"
			id="ocaml.properties.OcamlFileProperties" name="Ocaml Module"
			nameFilter="*.ml">
			<enabledWhen>
				<and>
					<instanceof value="org.eclipse.core.resources.IFile"/>
					<test forcePluginActivation="true" property="Ocaml.isInNature"
						value="ocaml.ocamlnature"/>
				</and>
			</enabledWhen>
		</page>
		<page class="ocaml.properties.OcamlProjectPathsProperties"
			id="Ocaml.properties.projectpaths" name="Project Paths">
			<enabledWhen>
				<instanceof value="org.eclipse.core.resources.IProject"/>
			</enabledWhen>
			<filter name="nature" value="ocaml.ocamlnature"/>
		</page>
		<page class="ocaml.properties.OcamlMakefileProjectProperties"
			id="ocaml.properties.OcamlMakefileProjectProperties" name="Makefile">
			<enabledWhen>
				<instanceof value="org.eclipse.core.resources.IProject"/>
			</enabledWhen>
			<filter name="nature" value="ocaml.ocamlnatureMakefile"/>
		</page>
		<page class="ocaml.properties.LinkedFilesProperties"
			id="ocaml.properties.LinkedFilesProperties"
			name="Ocaml External File">
			<enabledWhen>
				<and>
		      		<instanceof value="org.eclipse.core.resources.IFile"/>
					<test forcePluginActivation="true"
						property="Ocaml.isLinkedFile" value="true"/>
					<test forcePluginActivation="true" property="Ocaml.isInNature"
						value="ocaml.ocamlnature"/>
				</and>
			</enabledWhen>
		</page>
		<page class="ocaml.properties.OcamlProjectFlagsProperties"
			id="ocaml.properties.OcamlProjectFlagsProperties"
			name="Ocaml Build Flags">
		   <enabledWhen>
		      <instanceof
		            value="org.eclipse.core.resources.IProject">
		      </instanceof>
		   </enabledWhen>
			<filter name="nature" value="ocaml.ocamlnature"/>
		</page>
		<page class="ocaml.properties.OcamlProjectPathsProperties"
			id="Ocaml.properties.projectpathsMakefile" name="Project Paths">
			<enabledWhen>
				<instanceof
		            value="org.eclipse.core.resources.IProject">
				</instanceof>
			</enabledWhen>
			<filter name="nature" value="ocaml.ocamlnatureMakefile"/>
		</page>
		<page class="ocaml.properties.OcamlbuildProjectProperties"
			id="Ocaml.properties.ocamlbuild" name="Project">
		   <enabledWhen>
		      <instanceof
		            value="org.eclipse.core.resources.IProject">
		      </instanceof>
		   </enabledWhen>
			<filter name="nature" value="ocaml.ocamlbuildnature"/>
		</page>
		<page class="ocaml.properties.OcamlProjectPathsProperties"
			id="Ocaml.properties.projectpathsOcamlbuild" name="Project Paths">
			<filter name="nature" value="ocaml.ocamlbuildnature"/>
		   <enabledWhen>
		      <instanceof
		            value="org.eclipse.core.resources.IProject">
		      </instanceof>
		   </enabledWhen>
		</page>
	</extension>
	
	<extension id="ocaml.decoratorsextension" name="Decorators extension"
		point="org.eclipse.ui.decorators">
		<decorator adaptable="true" icon="icons/generated.gif"
			id="Ocaml.generatedDecorator" label="Autogenerated" lightweight="true"
			location="TOP_RIGHT" state="true">
			<enablement>
				<and>
					<objectClass name="org.eclipse.core.resources.IFile"/>
					
					<objectState name="persistentProperty"
						value="ocaml.is_gen=true"/>
					<not>
						<objectState name="path" value="*/External files/*"/>
					</not>
				</and>
			</enablement>
		</decorator>
		<decorator adaptable="true" icon="icons/errorInSource.gif"
			id="Ocaml.errorInSourceDecorator" label="Error in source"
			lightweight="true" location="BOTTOM_LEFT" state="false">
			<enablement>
				<and>
					<objectState name="persistentProperty"
						value="ocaml.compilation_errors"/>
     <objectClass name="org.eclipse.core.resources.IFile"/>
				</and>
			</enablement>
		</decorator>
		<decorator adaptable="true" icon="icons/warning_co.gif"
			id="Ocaml.warningInSourceDecorator" label="Warning in source"
			lightweight="true" location="BOTTOM_LEFT" state="false">
			<enablement>
				<and>
					<objectState name="persistentProperty"
						value="ocaml.compilation_warnings"/>
     <objectClass name="org.eclipse.core.resources.IFile"/>
     <not>
        <objectState
              name="persistentProperty"
              value="ocaml.compilation_errors"/>
     </not>
				</and>
			</enablement>
		</decorator>
		<decorator adaptable="true" icon="icons/makeexe.gif"
			id="Ocaml.makeExeDecorator" label="Make Executable" lightweight="true"
			location="BOTTOM_RIGHT" state="false">
			<enablement>
				<and>
					<objectClass name="org.eclipse.core.resources.IFile"/>
					<objectState name="persistentProperty"
						value="ocaml.make_exe"/>
				</and>
			</enablement>
		</decorator>
		<decorator adaptable="true" class="ocaml.build.WithLocationDecorator"
			id="Ocaml.LocationDecorator" label="LocationPrinter"
			lightweight="true" location="TOP_LEFT" state="true">
			<enablement>
				<and>
					<objectClass name="org.eclipse.core.resources.IFile"/>
					<objectState name="path" value="*/External files/*"/>
				</and>
			</enablement>
		</decorator>
		<decorator icon="icons/library_obj.gif" id="Ocaml.externalFilesDecorator"
			label="External files" lightweight="true" state="true">
			<enablement>
				<and>
					<objectState name="name" value="External files"/>
					<objectClass name="org.eclipse.core.resources.IFolder"/>
				</and>
			</enablement>
		</decorator>
		<decorator icon="icons/library_obj.gif"
			id="Ocaml.externalSourcesDecorator" label=".DebuggerSourceLookup"
			lightweight="true" state="true">
			<enablement>
				<and>
					<objectState name="name" value=".DebuggerSourceLookup"/>
					<objectClass name="org.eclipse.core.resources.IFolder"/>
				</and>
			</enablement>
		</decorator>
		<decorator icon="icons/binaryfile.gif"
			id="Ocaml.nativeExecutableDecorator" label="Native Executable"
			lightweight="true" state="true">
			<enablement>
				<and>
					<objectClass name="org.eclipse.core.resources.IFile"/>
					<objectState name="persistentProperty"
						value="ocaml.compil_mode=native"/>
				</and>
			</enablement>
		</decorator>
		<decorator icon="icons/byteCode.gif"
			id="Ocaml.byteCodeExecutableDecorator" label="Byte-code Executable"
			lightweight="true" state="true">
			<enablement>
				<and>
					<objectClass name="org.eclipse.core.resources.IFile"/>
					<objectState name="persistentProperty"
						value="ocaml.compil_mode=byte-code"/>
				</and>
			</enablement>
		</decorator>
  <decorator
        adaptable="true"
        icon="icons/warning_co.gif"
        id="Ocaml.warningInProjectDecorator"
        label="Warning in project"
        lightweight="true"
        location="BOTTOM_LEFT"
        state="true">
     <enablement>
        <and>
           <objectClass name="org.eclipse.core.resources.IProject"/>
           <objectState
                 name="persistentProperty"
                 value="ocaml.compilation_warnings"/>
           <not>
              <objectState
                    name="persistentProperty"
                    value="ocaml.compilation_errors"/>
           </not>
        </and>
     </enablement>
  </decorator>
  <decorator
        adaptable="true"
        icon="icons/errorInSource.gif"
        id="Ocaml.errorInProjectDecorator"
        label="Error in project"
        lightweight="true"
        location="BOTTOM_LEFT"
        state="false">
     <enablement>
        <and>
           <objectClass name="org.eclipse.core.resources.IProject"/>
           <objectState
                 name="persistentProperty"
                 value="ocaml.compilation_errors"/>
        </and>
     </enablement>
  </decorator>
	</extension>
	
	<extension id="ocaml.ocamlnature" name="OCaml Nature"
		point="org.eclipse.core.resources.natures">
		<runtime>
			<run class="ocaml.natures.OcamlNature"/>
		</runtime>
	</extension>
	
	<extension id="ocaml.ocamlnatureMakefile" name="OCaml Makefile Nature"
		point="org.eclipse.core.resources.natures">
		<runtime>
			<run class="ocaml.natures.OcamlNatureMakefile"/>
		</runtime>
		<builder id="Ocaml.ocamlMakefileBuilder"/>
	</extension>
	
	<extension id="ocaml.ocamlbuildnature" name="OCamlbuild Nature"
		point="org.eclipse.core.resources.natures">
		<runtime>
			<run class="ocaml.natures.OcamlbuildNature"/>
		</runtime>
		<builder id="Ocaml.ocamlbuildBuilder"/>
	</extension>
	
	<extension point="org.eclipse.ui.ide.projectNatureImages">
		<image icon="icons/camlNature.gif" natureId="ocaml.ocamlnature"
			id="ocamlNatureImage">
		</image>
		<image icon="icons/camlNatureMakefile.gif" id="ocamlMakefileNatureImage"
			natureId="ocaml.ocamlnatureMakefile"/>
		<image icon="icons/camlNature.gif" id="ocamlbuildNatureImage"
			natureId="ocaml.ocamlbuildnature"/>
	</extension>

	<extension id="ocamlbuilder" name="Ocaml Builder"
		point="org.eclipse.core.resources.builders">
		<builder hasNature="false" isConfigurable="true">
			<run class="ocaml.build.OcamlBuilder"/>
		</builder>
	</extension>
	
	<extension id="ocamlMakefileBuilder" name="Ocaml Makefile Builder"
		point="org.eclipse.core.resources.builders">
		<builder hasNature="true" isConfigurable="true">
			<run class="ocaml.build.makefile.OcamlMakefileBuilder"/>
		</builder>
	</extension>
	
	<extension id="ocamlbuildBuilder" name="Ocamlbuild Builder"
		point="org.eclipse.core.resources.builders">
		<builder
        callOnEmptyDelta="false"
        hasNature="true"
        isConfigurable="true">
			<run class="ocaml.build.ocamlbuild.OcamlbuildBuilder"/>
		</builder>
	</extension>

   	<extension point="org.eclipse.core.filebuffers.documentSetup">
		<participant class="ocaml.editors.OcamlDocumentSetupParticipant"
			extensions="ml,mli,mlp,ml4"/>
	</extension>
   	<extension point="org.eclipse.core.filebuffers.documentSetup">
		<participant class="ocaml.editors.lex.OcamllexDocumentSetupParticipant"
			extensions="mll"/>
	</extension>
   	<extension point="org.eclipse.core.filebuffers.documentSetup">
		<participant class="ocaml.editors.yacc.OcamlyaccDocumentSetupParticipant"
			extensions="mly"/>
	</extension>
	<extension point="org.eclipse.debug.core.launchConfigurationTypes">
		<launchConfigurationType
			delegate="ocaml.launching.OcamlLaunchConfigurationDelegate"
			id="Ocaml.launchConfigurationType" modes="run,debug"
			name="Ocaml Executable" public="true"/>
	</extension>
	<extension point="org.eclipse.debug.ui.launchConfigurationTypeImages">
		<launchConfigurationTypeImage
			configTypeID="Ocaml.launchConfigurationType"
			icon="icons/caml16x16.gif" id="Ocaml.launchConfigurationTypeImage"/>
	</extension>
	<extension point="org.eclipse.debug.ui.launchConfigurationTabGroups">
		<launchConfigurationTabGroup
			class="ocaml.launching.OcamlLaunchConfigurationTabGroup"
			description="Configure Ocaml executable launching"
			id="Ocaml.launchConfigurationTabGroup"
			type="Ocaml.launchConfigurationType"/>
	</extension>
	<extension point="org.eclipse.debug.ui.launchShortcuts">
		<shortcut class="ocaml.launching.OcamlLaunchShortcut"
			icon="icons/caml16x16.gif" id="Ocaml.launching.launchShortcut"
			label="Ocaml Executable" modes="run,debug">
			<contextualLaunch>
				<enablement>
					<with variable="selection">
						<count value="1"/>
						<iterate>
							<or>
								<test forcePluginActivation="true"
									property="Ocaml.isExecutable"/>
							</or>
						</iterate>
					</with>
				</enablement>
			</contextualLaunch>
		</shortcut>
	</extension>
	
	
	<extension point="org.eclipse.debug.ui.launchShortcuts">
  		<shortcut
    		label="Ocaml Toplevel"
		    icon="icons/toplevelViewIcon.gif"
		    modes="run"
		    class="ocaml.launching.OcamlToplevelLaunchShortcut"
		    description="Launch an Ocaml toplevel"
		    id="Ocaml.launching.toplevelLaunchShortcut">
    		<description description="Run an Ocaml toplevel" mode="run"/>
  			<contextualLaunch>
				<enablement>
					<with variable="selection">
				     <count value="1"/>
				      <iterate>
				        <test
		                  forcePluginActivation="true"
        		          property="Ocaml.isExecutable"/>
				      </iterate>
				     </with>
				</enablement>
			</contextualLaunch>
  		</shortcut>
	</extension>

	
	
	
	<extension point="org.eclipse.ui.actionSets">
		<actionSet description="Actions for debugging an Ocaml program"
			id="Ocaml_debuggingActionSet" label="Ocaml Debugging" visible="false">
			<menu id="Ocaml_debugMenu" label="Debug">
				<separator name="slot1"/>
				<separator name="slot2"/>
				<separator name="slot3"/>
			</menu>
			<action class="ocaml.debugging.actions.RemoveBreakpointsAction"
				definitionId="Ocaml.removeBreakpointsCommand"
				icon="icons/removeAll.gif"
				id="Ocaml_debuggingActions_removeBreakpoints"
				label="Remove Breakpoints" menubarPath="Ocaml_debugMenu/slot2"
				style="push" toolbarPath="Ocaml_debugMenu/slot2"/>
			<action class="ocaml.debugging.actions.PutBreakpointAction"
				definitionId="Ocaml.putBreakpointCommand"
				icon="icons/breakpoint.gif"
				id="Ocaml_debuggingActions_putBreakpoint" label="Put Breakpoint"
				menubarPath="Ocaml_debugMenu/slot2" style="push"
				toolbarPath="Ocaml_debugMenu/slot2"/>
			<action class="ocaml.debugging.actions.RestartAction"
				definitionId="Ocaml.restartCommand" icon="icons/term_restart.gif"
				id="Ocaml_debuggingActions_restart" label="Restart"
				menubarPath="Ocaml_debugMenu/slot3" style="push"
				toolbarPath="Ocaml_debugMenu/slot3"/>
			<action class="ocaml.debugging.actions.TerminateAction"
				definitionId="Ocaml.terminateCommand" icon="icons/term_sbook.gif"
				id="Ocaml_debuggingActions_terminate" label="Terminate"
				menubarPath="Ocaml_debugMenu/slot3" style="push"
				toolbarPath="Ocaml_debugMenu/slot3"/>
			<action class="ocaml.debugging.actions.StepReturnAction"
				definitionId="Ocaml.stepReturnCommand"
				icon="icons/stepreturn.gif"
				id="Ocaml_debuggingActions_stepreturn" label="Step Return"
				menubarPath="Ocaml_debugMenu/slot1" style="push"
				toolbarPath="Ocaml_debugMenu/slot1"/>
			<action class="ocaml.debugging.actions.BackstepReturnAction"
				definitionId="Ocaml.backstepReturnCommand"
				icon="icons/stepreturnBackwards.gif"
				id="Ocaml_debuggingActions_backstepReturn"
				label="Backstep Return" menubarPath="Ocaml_debugMenu/slot1"
				style="push" toolbarPath="Ocaml_debugMenu/slot1"/>
			<action class="ocaml.debugging.actions.StepOverAction"
				definitionId="Ocaml.stepOverCommand" icon="icons/stepover.gif"
				id="Ocaml_debuggingActions_stepover" label="Step Over"
				menubarPath="Ocaml_debugMenu/slot1" style="push"
				toolbarPath="Ocaml_debugMenu/slot1"/>
			<action class="ocaml.debugging.actions.BackStepOverAction"
				definitionId="Ocaml.backstepOverCommand"
				icon="icons/stepoverBackwards.gif"
				id="Ocaml_debuggingActions_backstepOver" label="Backstep Over"
				menubarPath="Ocaml_debugMenu/slot1" style="push"
				toolbarPath="Ocaml_debugMenu/slot1"/>
			<action class="ocaml.debugging.actions.StepAction"
				definitionId="Ocaml.stepCommand" icon="icons/stepinto.gif"
				id="Ocaml_debuggingActions_step" label="Step"
				menubarPath="Ocaml_debugMenu/slot1" style="push"
				toolbarPath="Ocaml_debugMenu/slot1"/>
			<action class="ocaml.debugging.actions.BackStepAction"
				definitionId="Ocaml.backstepCommand"
				icon="icons/stepintoBackwards.gif"
				id="Ocaml_debuggingActions_backstep" label="Backstep"
				menubarPath="Ocaml_debugMenu/slot1" style="push"
				toolbarPath="Ocaml_debugMenu/slot1"/>
			<action class="ocaml.debugging.actions.RunAction"
				definitionId="Ocaml.runCommand" icon="icons/run.gif"
				id="Ocaml_debuggingActions_run" label="Run"
				menubarPath="Ocaml_debugMenu/slot3" style="push"
				toolbarPath="Ocaml_debugMenu/slot3"/>
			<action class="ocaml.debugging.actions.ReverseAction"
				definitionId="Ocaml.reverseCommand" icon="icons/runBackwards.gif"
				id="Ocaml_debuggingActions_runBackwards" label="Reverse"
				menubarPath="Ocaml_debugMenu/slot3" style="push"
				toolbarPath="Ocaml_debugMenu/slot3"/>
		</actionSet>
		<actionSet description="Actions on Ocaml source code"
			id="Ocaml_sourceActionSet" label="Ocaml Source Actions"
			visible="false">
			<menu id="Ocaml_sourceMenu" label="Ocaml">
				<separator name="slot1"/>
			</menu>
   <action
         class="ocaml.editor.actions.SelectDownwardOneBlock"
         definitionId="Ocaml.selectDownwardOneBlock"
         id="Ocaml_sourceActions_selectDownwardOneBlock"
         label="Select Downward One Block"
         style="push">
   </action>
   <action
         class="ocaml.editor.actions.SelectUpwardOneBlock"
         definitionId="Ocaml.selectUpwardOneBlock"
         id="Ocaml_sourceActions_selectUpwardOneBlock"
         label="Select Upward One Block"
         style="push">
   </action>
   <action
         class="ocaml.editor.actions.MoveCursorUpwardByIndent"
         definitionId="Ocaml.moveCursorUpwardOneBlock"
         id="Ocaml_sourceActions_moveCursorUpwardOneBlock"
         label="Move Cursor Upward One Block"
         style="push">
   </action>
   <action
         class="ocaml.editor.actions.MoveCursorDownwardByIndent"
         definitionId="Ocaml.moveCursorDownwardOneBlock"
         id="Ocaml_sourceActions_moveCursorDownwardOneBlock"
         label="Move Cursor Downward One Block"
         style="push">
   </action>
   <action
         class="ocaml.editor.actions.GotoDefinition"
         definitionId="Ocaml.gotoDefinitionCommand"
         id="Ocaml_sourceActions_gotoDefinition"
         label="Go To Definition"
         style="push">
   </action>
			<action	class="ocaml.editor.actions.MarkOccurrencesAction"
				definitionId="Ocaml.markOccurrencesCommand"
				icon="icons/markOccurrence.gif"
				id="Ocaml_sourceActions_markOccurrences" label="Mark Occurrences" style="push"/>
			<action	class="ocaml.editor.actions.ShiftLeftAction"
				definitionId="Ocaml.shiftLeftCommand"
				icon="icons/shiftLeft.png"
				id="Ocaml_sourceActions_shiftLeft" label="Shift Left" style="push"/>
			<action	class="ocaml.editor.actions.ShiftRightAction"
				definitionId="Ocaml.shiftRightCommand"
				icon="icons/shiftRight.png"
				id="Ocaml_sourceActions_shiftRight"	label="Shift Right" style="push"/>
			<action class="ocaml.editor.actions.CommentSelectionAction"
				definitionId="Ocaml.commentSelectionProtectedCommand"
				id="Ocaml_sourceActions_CommentSelectionProtected" label="Comment/Uncomment Selection (Protected)"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.CommentSelectionAction"
				definitionId="Ocaml.commentSelectionCommand"
				id="Ocaml_sourceActions_CommentSelection" label="Comment/Uncomment Selection"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.OpenIntfImplAction"
				definitionId="Ocaml.openIntfImplCommand"
				id="Ocaml_sourceActions_OpenIntfImpl" label="Open interface/implementation"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.ConvertSpacesToTabsAction"
				definitionId="Ocaml.spacesToTabsCommand"
				id="Ocaml_sourceActions_SpacesToTabs" label="Convert Spaces to Tabs"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.ConvertTabsToSpacesAction"
				definitionId="Ocaml.tabsToSpacesCommand"
				id="Ocaml_sourceActions_TabsToSpaces" label="Convert Tabs to Spaces"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.ConvertWithCamlp4Action"
				definitionId="Ocaml.camlp4convertCommand"
				id="Ocaml_sourceActions_Camlp4Convert" label="Convert revised syntax to standard syntax"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.build.makefile.CleanAction"
				definitionId="Ocaml.cleanCommand" id="Ocaml.cleanAction"
				label="Clean" menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.ToplevelQuickEvalAction"
				definitionId="Ocaml.toplevelQuickEvalCommand"
				id="Ocaml_sourceActions_ToplevelQuickEval"
				label="Eval In Toplevel" menubarPath="Ocaml_sourceMenu/slot1"
				style="push"/>
			<action class="ocaml.editor.actions.GotoMatchingDelimiterAction"
				definitionId="Ocaml.gotoMatchingDelimiterCommand"
				id="Ocaml_sourceActions_GotoMatchingDelimiter"
				label="Goto Matching Delimiter"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.FormatWithCamlp4Action"
				definitionId="Ocaml.camlp4formatterCommand"
				id="Ocaml_sourceActions_Camlp4Formatter" label="Format with camlp4"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.FormatterAction"
				definitionId="Ocaml.formatterCommand"
				id="Ocaml_sourceActions_Formatter" label="Format"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.ContentAssistAction"
				definitionId="Ocaml.contentAssistCommand"
				id="Ocaml_sourceActions_ContentAssist" label="Content Assist"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action class="ocaml.editor.actions.ContextInformationAction"
				definitionId="Ocaml.contextInformationCommand"
				icon="icons/help.gif" id="Ocaml_sourceActions_ContextInformation"
				label="Show Tooltip Description"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
			<action
				class="ocaml.editor.actions.SwitchSpellCheckingAction"
				definitionId="Ocaml.switchSpellCheckerCommand"
				icon="icons/spellcheck.gif"
				id="Ocaml_sourceActions_SwitchSpellChecker"
				label="Switch Spell Checker"
				pulldown="false"
				state="false"
				style="push"
				toolbarPath="Ocaml_sourceMenu/slot1">
			</action>
			<action class="ocaml.editor.actions.OpenQuickOutlineAction"
				definitionId="Ocaml.openQuickOutlineCommand"
				id="Ocaml_sourceActions_QuickOutline" label="Quick Outline"
				menubarPath="Ocaml_sourceMenu/slot1" style="push"/>
   <action
         class="ocaml.editor.actions.ShowTextHover"
         definitionId="Ocaml.showTextHover"
         id="Ocaml_sourceActions_showTextHover"
         label="Show Text Hover"
         style="push">
   </action>
		</actionSet>
  <actionSet
        description="Action for compiling projects"
        id="Ocaml_projectActionSet"
        label="Project Actions"
        visible="true">
     <action
           class="ocaml.editor.actions.CompileProjectAction"
           definitionId="Ocaml.compileProject"
           id="Ocaml_projectActions_compileProject"
           label="Compile Project"
           style="push">
     </action>
     <action
           class="ocaml.editor.actions.CancelCompileAllProjectsAction"
           definitionId="Ocaml.cancelCompileAllProjects"
           id="Ocaml_projectActions_cancelCompileAllProjects"
           label="Cancel Compiling All Projects"
           style="push">
     </action>
     <action
           class="ocaml.editor.actions.CleanProjectAction"
           definitionId="Ocaml.cleanProject"
           id="Ocaml_projectActions_cleanProject"
           label="Clean Project"
           style="push">
     </action>
  </actionSet>
	</extension>
	<extension point="org.eclipse.ui.commands">
		<category id="Ocaml.commandscategory" name="Ocaml Commands"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.stepCommand"
			name="Step"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.backstepCommand"
			name="Backstep"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.putBreakpointCommand" name="Put Breakpoint"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.runCommand"
			name="Run"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.removeBreakpointsCommand" name="Remove Breakpoints"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.terminateCommand"
			name="Terminate"/>
		
		<command categoryId="Ocaml.commandscategory" id="Ocaml.stepOverCommand"
			name="Step Over"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.backstepOverCommand" name="Backstep Over"/>
		
		<command categoryId="Ocaml.commandscategory" id="Ocaml.stepReturnCommand"
			name="Step Return"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.backstepReturnCommand" name="Backstep Return"/>
		
		<command categoryId="Ocaml.commandscategory" id="Ocaml.reverseCommand"
			name="Reverse"/>
		
		<command categoryId="Ocaml.commandscategory" id="Ocaml.restartCommand"
			name="Restart"/>
		
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.contextInformationCommand"
			name="Show Tooltip Description"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.openIntfImplCommand"
			name="Open interface/implementation"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.contentAssistCommand" name="Content Assist"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.formatterCommand"
			name="Format"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.camlp4formatterCommand"
			name="Format with camlp4"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.camlp4convertCommand"
			name="Convert from revised syntax to standard syntax with camlp4"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.spacesToTabsCommand"
			name="Convert Spaces to Tabs"/>
		<command categoryId="Ocaml.commandscategory" id="Ocaml.tabsToSpacesCommand"
			name="Convert Tabs to Spaces"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.gotoMatchingDelimiterCommand"
			name="Goto Matching Delimiter"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.toplevelQuickEvalCommand" name="Eval In Toplevel"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.commentSelectionCommand" name="Comment/Uncomment Selection"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.commentSelectionProtectedCommand" name="Comment/Uncomment Selection (Protected)"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.openQuickOutlineCommand" name="Quick Outline"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.shiftRightCommand" name="Shift Right"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.shiftLeftCommand" name="Shift Left"/>
		<command categoryId="Ocaml.commandscategory"
			id="Ocaml.markOccurrencesCommand" name="Mark Occurrences"/>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.gotoDefinitionCommand"
        name="Go To Definition">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.moveCursorDownwardOneBlock"
        name="Move Cursor Downward One Block">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.moveCursorUpwardOneBlock"
        name="Move Cursor Upward One Block">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.selectUpwardOneBlock"
        name="Select Upward One Block">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.selectDownwardOneBlock"
        name="Select Downward One Block">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.showTextHover"
        name="Show Text Hover">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.cancelCompileAllProjects"
        name="Cancel Compile All Projects">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.compileProject"
        name="Compile Project">
  </command>
  <command
        categoryId="Ocaml.commandscategory"
        id="Ocaml.cleanProject"
        name="Clean Project">
  </command>
	</extension>
	<extension point="org.eclipse.ui.bindings">
		<key
        commandId="Ocaml.stepCommand"
        contextId="org.eclipse.ui.contexts.window"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+*"/>
		<key commandId="Ocaml.backstepCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+Ù"/>
		<key commandId="Ocaml.stepOverCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+="/>
		<key commandId="Ocaml.backstepOverCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+)"/>
		<key commandId="Ocaml.stepReturnCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+À"/>
		<key commandId="Ocaml.backstepReturnCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+Ç"/>
		<key commandId="Ocaml.putBreakpointCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+W B"/>
		<key commandId="Ocaml.removeBreakpointsCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+W R"/>
		<key commandId="Ocaml.terminateCommand"
			contextId="org.eclipse.ui.contexts.window"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+F2"/>
		<key commandId="Ocaml.contextInformationCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="F2"/>
		<key commandId="Ocaml.contentAssistCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="CTRL+SPACE"/>
		<key commandId="Ocaml.camlp4formatterCommand" contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M2+F3"/>
		<key commandId="Ocaml.gotoMatchingDelimiterCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="F4"/>
		<key commandId="Ocaml.toplevelQuickEvalCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="F6"/>
		<key commandId="Ocaml.openIntfImplCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="F7"/>
		<key commandId="Ocaml.commentSelectionCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+M2+C"/>
		<key commandId="Ocaml.commentSelectionProtectedCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+M2+M3+C"/>
		<key commandId="Ocaml.openQuickOutlineCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+O"/>
		<key commandId="Ocaml.shiftRightCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="TAB"/>
		<key commandId="Ocaml.shiftLeftCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M2+TAB"/>
		<key commandId="Ocaml.markOccurrencesCommand"
			contextId="Ocaml.editor.context"
			schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
			sequence="M1+M3+N"/>
  <key
        commandId="Ocaml.gotoDefinitionCommand"
        contextId="Ocaml.editor.context"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="F3">
  </key>
  <key
        commandId="Ocaml.moveCursorDownwardOneBlock"
        contextId="org.eclipse.ui.textEditorScope"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+ARROW_DOWN">
  </key>
  <key
        commandId="Ocaml.moveCursorUpwardOneBlock"
        contextId="org.eclipse.ui.textEditorScope"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+ARROW_UP">
  </key>
  <key
        commandId="Ocaml.selectUpwardOneBlock"
        contextId="org.eclipse.ui.textEditorScope"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+M2+ARROW_UP">
  </key>
  <key
        commandId="Ocaml.selectDownwardOneBlock"
        contextId="org.eclipse.ui.textEditorScope"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+M2+ARROW_DOWN">
  </key>
  <key
        commandId="Ocaml.showTextHover"
        contextId="org.eclipse.ui.textEditorScope"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+M3+H">
  </key>
  <key
        commandId="Ocaml.cancelCompileAllProjects"
        contextId="org.eclipse.ui.contexts.window"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+F12">
  </key>
  <key
        commandId="Ocaml.compileProject"
        contextId="org.eclipse.ui.contexts.window"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+B">
  </key>
  <key
        commandId="Ocaml.cleanProject"
        contextId="org.eclipse.ui.contexts.window"
        schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
        sequence="M1+F9">
  </key>
	</extension>
	<extension point="org.eclipse.ui.contexts">
		<context description="Context for editing Ocaml source"
			id="Ocaml.editor.context" name="Editing Ocaml Source"
			parentId="org.eclipse.ui.textEditorScope"/>
	</extension>
	<extension point="org.eclipse.core.expressions.propertyTesters">
		<propertyTester class="ocaml.util.HasOcamlNaturePropertyTester"
			id="Ocaml.natureTester" namespace="Ocaml" properties="isInNature"
			type="org.eclipse.core.resources.IFile"/>
		<propertyTester class="ocaml.util.IsExecutablePropertyTester"
			id="Ocaml.isExecutableTester" namespace="Ocaml"
			properties="isExecutable"
			type="org.eclipse.core.resources.IResource"/>
		<propertyTester class="ocaml.util.IsLinkedPropertyTester"
			id="Ocaml.isLinkedTester" namespace="Ocaml" properties="isLinkedFile"
			type="org.eclipse.core.resources.IFile"/>
	</extension>
	
	<extension point="org.eclipse.ui.popupMenus">
		<objectContribution adaptable="true"
			id="ocaml.makefileProjectContribution"
			objectClass="org.eclipse.core.resources.IProject">
			<filter name="nature" value="ocaml.ocamlnatureMakefile"/>
			
			<action label="Create Documentation"
				class="ocaml.popup.actions.GenDocAction" icon="icons/doc.gif"
				menubarPath="additions" enablesFor="1"
				id="ocaml.popup.actions.GenDocAction">
			</action>
			
			<action label="Clean Project"
				class="ocaml.popup.actions.CleanProjectPopupAction"
				icon="icons/clean.gif" menubarPath="additions" enablesFor="1"
				id="ocaml.popup.actions.CleanProjectAction">
			</action>
			
			<action label="Make Project"
				class="ocaml.popup.actions.CompileProjectPopupAction"
				icon="icons/buildAll.gif" menubarPath="additions" enablesFor="1"
				id="ocaml.popup.actions.CompileProjectAction">
			</action>
   <action
         class="ocaml.popup.actions.CancelCompileProjectPopupAction"
         enablesFor="1"
         id="ocaml.popup.actions.cancelCompileActions"
         label="Cancel Compiling Projects"
         menubarPath="additions">
   </action>
			
		</objectContribution>
		<objectContribution adaptable="true" id="ocaml.fileContribution"
			nameFilter="*.ml" objectClass="org.eclipse.core.resources.IFile">
			<action
	         class="ocaml.popup.actions.GenMliAction"
	         enablesFor="1"
	         icon="icons/interfFile.gif"
	         id="ocaml.popup.actions.GenMliAction"
	         label="Generate Interface"
	         menubarPath="additions">
		   </action>
			<enablement>
				<!-- This warning is a bug in Eclipse PDE. The 'test' element does exist! -->
				<test forcePluginActivation="true" property="Ocaml.isInNature"
					value="ocaml.ocamlnatureMakefile"/>
			</enablement>
		</objectContribution>

		<objectContribution adaptable="true" id="ocaml.fileContribution2"
			nameFilter="*.ml" objectClass="org.eclipse.core.resources.IFile">
			<action
	         class="ocaml.popup.actions.GenMliOcamlbuildAction"
	         enablesFor="1"
	         icon="icons/interfFile.gif"
	         id="ocaml.popup.actions.GenMliOcamlbuildAction"
	         label="Generate Interface"
	         menubarPath="additions">
		   </action>
			<enablement>
				<!-- This warning is a bug in Eclipse PDE. The 'test' element does exist! -->
				<test forcePluginActivation="true" property="Ocaml.isInNature"
					value="ocaml.ocamlbuildnature"/>
			</enablement>
		</objectContribution>

		<objectContribution adaptable="true" id="Ocaml.LoadInToplevelContribution"
			nameFilter="*.ml" objectClass="org.eclipse.core.resources.IFile">
			<action class="ocaml.popup.actions.LoadInToplevelAction"
				enablesFor="+" icon="icons/openInToplevel.gif"
				id="ocaml.popup.actions.LoadInToplevelAction"
				label="Load in Toplevel" menubarPath="additions"/>
		</objectContribution>
		<objectContribution adaptable="true" id="Ocaml.projectContribution"
			objectClass="org.eclipse.core.resources.IProject">
			<filter name="nature" value="ocaml.ocamlnature"/>
			<action class="ocaml.popup.actions.GenMakefileAction" enablesFor="1"
				icon="icons/makefile.gif"
				id="ocaml.popup.actions.GenMakefileAction"
				label="Generate Makefile" menubarPath="additions"/>
		</objectContribution>
	</extension>
 <extension
       id="ocamlSyntaxErrorMarker"
       name="Ocaml syntax error marker"
       point="org.eclipse.core.resources.markers">
    <persistent
          value="true">
    </persistent>
    <super
          type="org.eclipse.core.resources.textmarker">
    </super>
 </extension>
 <extension
       point="org.eclipse.ui.editors.annotationTypes">
    <type
          markerType="Ocaml.ocamlSyntaxErrorMarker"
          name="Ocaml.ocamlSyntaxErrorAnnotationType">
    </type>
    <type
          markerType="ocaml.marker.occurrences"
          name="ocaml.marker.occurrences">
    </type>
 </extension>
 <extension
       point="org.eclipse.ui.editors.markerAnnotationSpecification">
    <specification
          annotationType="Ocaml.ocamlSyntaxErrorAnnotationType"
          colorPreferenceKey="syntaxerror.color"
          colorPreferenceValue="255,140,0"
          contributesToHeader="true"
          highlightPreferenceKey="syntaxerror.highlight"
          highlightPreferenceValue="true"
          includeOnPreferencePage="true"
          isGoToNextNavigationTarget="true"
          isGoToNextNavigationTargetKey="true"
          isGoToPreviousNavigationTarget="true"
          isGoToPreviousNavigationTargetKey="true"
          label="Ocaml Syntax Error"
          overviewRulerPreferenceKey="syntaxerror.rulers.overview"
          overviewRulerPreferenceValue="true"
          presentationLayer="1"
          showInNextPrevDropdownToolbarAction="true"
          showInNextPrevDropdownToolbarActionKey="true"
          symbolicIcon="error"
          textPreferenceKey="syntaxerror.text"
          textPreferenceValue="true"
          textStylePreferenceKey="syntaxerror.textstyle"
          textStylePreferenceValue="SQUIGGLES"
          verticalRulerPreferenceKey="syntaxerror.rulers.vertical"
          verticalRulerPreferenceValue="true">
    </specification>
    <specification
          annotationType="ocaml.marker.occurrences"
          colorPreferenceKey="ocaml.marker.occurrences.color"
          colorPreferenceValue="192,255,192"
          contributesToHeader="true"
          highlightPreferenceKey="ocaml.marker.occurrences.highlight"
          highlightPreferenceValue="true"
          includeOnPreferencePage="true"
          isGoToNextNavigationTarget="true"
          isGoToNextNavigationTargetKey="true"
          isGoToPreviousNavigationTarget="true"
          isGoToPreviousNavigationTargetKey="true"
          label="Ocaml Occurrences Marker"
          overviewRulerPreferenceKey="ocaml.marker.occurrences.overview"
          overviewRulerPreferenceValue="true"
          presentationLayer="0"
          showInNextPrevDropdownToolbarAction="true"
          showInNextPrevDropdownToolbarActionKey="true"
          symbolicIcon="info"
          textPreferenceKey="ocaml.marker.occurrences.text"
          textPreferenceValue="true"
          textStylePreferenceValue="BOX"
          verticalRulerPreferenceKey="ocaml.marker.occurrences.ruler"
          verticalRulerPreferenceValue="true">
    </specification>
 </extension>
 <extension
       point="org.eclipse.team.core.ignore">
		<ignore enabled="true" pattern=".project"/>
		<ignore enabled="true" pattern=".DS_Store"/>		
		<ignore enabled="true" pattern="*.annot"/>		
		<ignore enabled="true" pattern="*.cmo"/>		
		<ignore enabled="true" pattern="*.cmi"/>		
		<ignore enabled="true" pattern="*.cmx"/>		
		<ignore enabled="true" pattern="*.cma"/>		
		<ignore enabled="true" pattern="*.cmxa"/>
		<ignore pattern="*.o" enabled="true"/>
		<ignore pattern="*.obj" enabled="true"/>
		<ignore pattern=".settings" enabled="true"/>
		<ignore pattern=".paths" enabled="true"/>
		<ignore pattern="._d" enabled="true"/>
		<ignore pattern="._bcdi" enabled="true"/>
		<ignore pattern="._ncdi" enabled="true"/>
  		<ignore pattern="*._old" enabled="true"/>
  		<ignore pattern=".makefilepaths" enabled="true"/>
  		<ignore pattern="_build" enabled="true"/>
  		<ignore pattern="*.byte" enabled="true"/>
  		<ignore pattern="*.native" enabled="true"/>
 </extension>
 <extension
       point="org.eclipse.ui.editors.templates">
    <contextType
          class="ocaml.editor.templates.OcamlFileContextType"
          id="ocaml.editors.templates.contextType.ocamlFile"
          name="Ocaml">
    </contextType>
    <include
          file="templates.xml">
    </include>
 </extension>

	<extension
		point="org.eclipse.core.resources.markers"
		id="ocaml.marker.occurrences"
		name="Ocaml Occurrences Marker">
		<super
			type="org.eclipse.core.resources.textmarker">
		</super>
	</extension>

</plugin>
